{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "JSON Schema for TrapDef format",
    "type": "object",
    "additionalProperties": false,
    "required": [
        "def",
        "name",
        "identifier",
        "authors",
        "version",
        "supportedRunners"
    ],
    "properties": {
        "def": {
            "type": "string",
            "description": "Version of TrapDef schema. Should be set to 1.0",
            "enum": ["1.0"]
        },
        "name": {
            "type": "string",
            "description": "A descriptive name of the trap that appears in the UI."
        },
        "identifier": {
            "type": "string",
            "pattern": "^[A-Za-z0-9_-]+$",
            "description": "Unique trap definition identifier."
        },
        "description": {
            "type": "string",
            "description": "A longer description of the trap."
        },
        "authors": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of authors of the trap."
        },
        "version": {
            "type": "string",
            "pattern": "^([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+[0-9A-Za-z-]+)?$",
            "description": "Semantic version of a trap. Example: 1.0.0 (https://semver.org). All traps must be versioned using semantic versioning."
        },
        "supportedRunners": {
            "type": "array",
            "description": "List of runner (sensor) types that this trap supports.",
            "items": {
                "$ref": "#/definitions/runnerType"
            }
        },
        "dockerRunnerDefinition": {
            "description": "Configuration specific to the Docker sensor. Only define when SupportedRunners includes Docker.",
            "$ref": "#/definitions/dockerRunnerDefinition"
        },
        "experimentalFeatures": {
            "description": "Configuration of experimental features. Only define when SupportedRunners includes Docker.",
            "$ref": "#/definitions/experimentalFeatures"
        },
        "customOptions": {
            "description": "JSON Schema for custom options that can be requested during trap creation in TrapInit. For best results, use property list only.",
            "$ref": "http://json-schema.org/draft-04/schema"
        },
        "baits": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/bait"
            },
            "description": "A list of baits that can be generated for this trap. Appears in TrapInit UI."
        },
        "ports": {
            "$ref": "#/definitions/port",
            "description": "Allows defining additional custom ports, and changing properties of the default port every trap exposes."
        }
    },
    "definitions": {
        "runnerType": {
            "type": "string",
            "description": "Defines the type of the sensor that the trap will run on.",
            "enum": [
                "Docker"
            ]
        },
        "experimentalFeatures": {
            "type": "object",
            "additionalProperties": false,
            "description": "Configuration of experimental features.",
            "required": [
                "useNetworkHostMode"
            ],
            "properties": {
                "useNetworkHostMode": {
                    "type": "boolean",
                    "description": "Allow the use of host networking mode in docker-compose."
                }
            }
        },
        "dockerRunnerDefinition": {
            "type": "object",
            "additionalProperties": false,
            "description": "Configuration specific to the Docker sensor.",
            "required": [
                "dockerComposePath",
                "imagesPath"
            ],
            "properties": {
                "dockerComposePath": {
                    "type": "string",
                    "description": "Path to the docker-compose.yml file defining the trap's resources. This must be a relative path, contained within the trap zip file."
                },
                "imagesPath": {
                    "type": "string",
                    "description": "Path to the archive of images used by the trap. All images defined in the docker-compose.yml file must be included in this archive. Can be generated by `docker save`. This must be a relative path, contained within the trap zip file."
                }
            }
        },
        "bait": {
            "type": "object",
            "additionalProperties": false,
            "definitions": "A bait that can be generated for this trap.",
            "required": [
                "name",
                "description",
                "type",
                "templateFile"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name displayed in TrapInit interface."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description displayed in TrapInit."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the bait template.",
                    "enum": [
                        "PowershellTemplate",
                        "PowershellScript",
                        "PlainScript"
                    ]
                },
                "templateFile": {
                    "type": "string",
                    "description": "Path to the template for the bait file. This must be a relativepath, contained within the trap zip file."
                },
                "targetPathTemplate": {
                    "description": "For PowershellTemplate, defines the path that the file will be created on the host machine.",
                    "type": "string"
                }
            }
        },
        "port": {
            "type" : "object",
            "additionalProperties" : {
                "type" : "object",
                "required" : [
                    "name",
                    "type"
                ],
                "properties" : {
                    "name" : {
                        "type" : "string",
                        "description": "Name of the port displayed in the UI"
                    },
                    "type" : {
                        "type": "string",
                        "enum": [
                            "web",
                            "ssh",
                            "rdp",
                            "other"
                        ],
                        "description": "Type of the port"
                    },
                    "defaultValue" : {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number"
                            }
                        ],
                        "description": "Default port value hinted to the user"
                    }
                }
            }
        }
    }
}
